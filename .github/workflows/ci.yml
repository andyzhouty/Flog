name: Flog CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ matrix.os }}-pip-
            ${{ matrix.os }}-
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip3 install -r requirements-dev.txt
      - name: Test with pytest
        run: |
          . venv/bin/activate
          flask translate compile
          pytest
      - name: Submit coverage data
        if: ${{ matrix.python-version == 3.9 }} && ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          bash <(curl -s https://codecov.io/bash)

  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
      - name: Run database migration
        run: heroku run flask deploy

  push_to_registry:
    if: ${{ github.ref == 'refs/head/master' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flog:latest
